spring.application.name=UrbanVoyageBackend

# PostgreSQL Database Connection
spring.datasource.url=jdbc:postgresql://pg-3747b2e5-meftahahmedreda02-60b9.h.aivencloud.com:19015/defaultdb?sslmode=require
spring.datasource.username=avnadmin
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Server Port
server.port=8080

# SMTP Server Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=urbanvoyage12@gmail.com
spring.mail.password=${SPRING_MAIL_PASSWORD}


# Additional mail properties (if needed)
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.debug=true


adobe.pdf.clientId=${ADOBE_PDF_CLIENT_ID}
adobe.pdf.clientSecret=${ADOBE_PDF_CLIENT_SECRET}


# Jwt configuration
jwt.expiration=86400000
jwt.secret=${JWT_SECRET}
jwt.rememberMe.expiration=604800000



logging.level.org.springframework.security=DEBUG

stripe.api.key=${STRIPE_API_KEY}


spring.jpa.properties.hibernate.hbm2ddl.auto=update


# Oauth Config

spring.security.oauth2.client.registration.google.client-id=${OAUTH_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${OAUTH_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri=https://urbanvoyagebackend.onrender.com/login/oauth2/code/google



#
deepl.api.key=${DEEPL_API_KEY}



cloudinary.cloud_name=dbhbmpdh4
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}

# Max file size
spring.servlet.multipart.max-file-size=10MB
# Max request size
spring.servlet.multipart.max-request-size=10MB

# Enable multipart uploads
spring.servlet.multipart.enabled=true

frontend.base.url=${FRONTEND_BASE_URL}

